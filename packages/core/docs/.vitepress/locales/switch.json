{
  "props": {
    "autofocus": "Enables autofocus.",
    "disabled": "Disable the input.",
    "error": "Puts the input in a manual error state.",
    "errorCount": "The total number of errors that should display at once.",
    "errorMessages": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation.",
    "falseValue": "Sets value for falsy state.",
    "forceValidate": "Should force validate.",
    "hideDetails": "Hides hint and validation errors. When set to auto messages will be rendered only if there’s a message (hint, error message, counter value etc) to display.",
    "inputClass": "Applies a custom class to input.",
    "label": "Sets input label.",
    "labelHint": "Add hint to `Label`.",
    "loading": "Loading state.",
    "messagesOnFocused": "Show validation message only when there is focused.",
    "modelValue": "The v-model bound value.",
    "name": "Sets input name.",
    "pattern": "Sets input pattern.",
    "patternMessage": "Pattern validation message.",
    "placeholder": "Sets input placeholder.",
    "readonly": "Puts input in readonly state.",
    "required": "Sets input required.",
    "rules": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`.",
    "showLabelWrap": "Controls `Label` component `showWrap` prop.",
    "small": "Makes the component small.",
    "stateErrorColor": "Validation success state color class, `warn`, `none` or tailwindcss text class.",
    "stateErrorIcon": "Validation success state icon, default @zennnn/icons `ziStatusPointSm`.",
    "stateIcon": "Add input validation state icon.",
    "stateSuccessColor": "Validation success state color class, tailwindcss text color class.",
    "stateSuccessIcon": "Validation success state icon, default @zennnn/icons `ziCheckedSm`.",
    "trueValue": "Sets value for truthy state.",
    "validateOnBlur": "Delays validation until blur event.",
    "value": "The input’s value.",
    "valueComparator": "Apply a custom value comparator function."
  },
  "emits": {
    "update:modelValue": "Emitted when the model value updated.",
    "update:error": "Emitted when the **error** updated.",
    "change": "Emitted when the input is changed by user interaction."
  },
  "slots": {
    "default": "The default Vue slot.",
    "label": "Replaces the default label."
  }
}
