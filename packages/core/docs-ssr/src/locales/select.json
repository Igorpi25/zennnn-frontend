{
  "props": {
    "appendIcon": "Appends an icon to the component, passed to `Icon` component default slot.",
    "ariaAutocomplete": "Sets input [aria-autocomplete](https://www.w3.org/TR/2017/REC-wai-aria-1.1-20171214/#aria-autocomplete).",
    "ariaLabel": "Sets input [aria-label](https://www.w3.org/TR/wai-aria/#aria-label).",
    "attach": "Specifies which DOM element that this component should detach to.",
    "autocomplete": "Sets input [autocomplete](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete).",
    "autofocus": "Enables autofocus.",
    "boxClass": "Applies a custom class to popper wrapper.",
    "clearable": "Add input clear functionality, default @zennnn/icons `ziCloseDelete`.",
    "contentClass": "Applies a custom class to content wrapper.",
    "contentOnIntersect": "Render items on intersect.",
    "controlClass": "Applies a custom class to control wrapper.",
    "controlInputClass": "Applies a custom class to control input wrapper.",
    "dense": "Reduces the input height.",
    "dependencies": "Input controls contain element. Should not trigger focus on element click.",
    "disabled": "Disable the input.",
    "distance": "Displaces the popper away from, or toward, the reference element in the direction of its placement. A positive number displaces it further away, while a negative number lets it overlap the reference.",
    "error": "Puts the input in a manual error state.",
    "errorCount": "The total number of errors that should display at once.",
    "errorMessages": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation.",
    "filter": "The filtering algorithm used when searching.",
    "forceValidate": "Should force validate.",
    "height": "Height of the content.",
    "hideDetails": "Hides hint and validation errors. When set to auto messages will be rendered only if there’s a message (hint, error message, counter value etc) to display.",
    "inputClass": "Applies a custom class to input.",
    "inputmode": "Sets input [inputmode](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode) attribute.",
    "itemText": "Set property of **items**’s text value.",
    "itemValue": "Set property of **items**’s value - must be primitive. Dot notation is supported.",
    "items": "Can be an array of objects or array of strings. When using objects, will look for a text, value keys. This can be changed using the `item-text`, `item-value` props. Objects that have a `header` or `divider` property are considered special cases and generate a list header or divider; these items are not selectable.",
    "label": "Sets input label.",
    "labelHint": "Add hint to `Label`.",
    "loading": "Loading state.",
    "mask": "Mask pattern.",
    "maxHeight": "Sets the maximum height for the content.",
    "maxlength": "Sets input [maxlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/maxlength) attribute.",
    "messagesOnFocused": "Show validation message only when there is focused.",
    "minHeight": "Sets the minimum height for the content.",
    "minlength": "Sets input [minlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/minlength) attribute.",
    "modelValue": "The v-model bound value.",
    "name": "Sets input name attribute.",
    "noDataText": "Display text when there is no data.",
    "noFilter": "Do not apply filtering when searching. Useful when data is being filtered server side.",
    "noResultText": "Display text when there is no filter result.",
    "pattern": "Sets input [pattern](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern) attribute.",
    "patternMessage": "Pattern validation message.",
    "placeholder": "Sets input placeholder attribute.",
    "prependIcon": "Prepends an icon to the component, passed to `Icon` component default slot.",
    "readonly": "Puts input in readonly state.",
    "required": "Sets input required attribute. If not **required** and not has custom **stateErrorColor** used warning color in error state icon.",
    "returnObject": "Changes the selection behavior to return the object directly rather than the value specified with **item-value**.",
    "rules": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`.",
    "search": "Search value. Can be used with v-model.",
    "showArrow": "Controls `Menu` component `arrow` prop.",
    "showLabelWrap": "Controls `Label` component `showWrap` prop.",
    "singleLine": "Label does not shown.",
    "size": "Sets input [size](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/size) attribute.",
    "solo": "Changes the style of the input.",
    "stateErrorColor": "Validation success state color class, `warn`, `none` or tailwindcss text class.",
    "stateErrorIcon": "Validation success state icon, default @zennnn/icons `ziStatusPointSm`.",
    "stateIcon": "Add input validation state icon.",
    "stateSuccessColor": "Validation success state color class, tailwindcss text color class.",
    "stateSuccessIcon": "Validation success state icon, default @zennnn/icons `ziCheckedSm`.",
    "type": "Sets input [type](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input) attribute.",
    "validateOnBlur": "Delays validation until blur event."
  },
  "emits": {
    "update:modelValue": "Emitted when the model value updated.",
    "update:search": "Emitted when the **search** updated.",
    "update:error": "Emitted when the **error** updated.",
    "click:clear": "Emitted when clearable icon clicked.",
    "change": "Emitted when the input is changed by user interaction.",
    "focus": "Emitted when component is focused.",
    "blur": "Emitted when the input is blurred.",
    "keydown": "Emitted when any key is pressed.",
    "mousedown": "Emitted when click is pressed.",
    "mouseup": "Emitted when click is released."
  },
  "slots": {
    "default": "The default Vue slot.",
    "label": "Replaces the default label.",
    "prepend": "Adds an item inside the input and after input content.",
    "append": "Adds an item outside the input and before input content.",
    "prepend-outer": "Adds an item inside the input and before input content.",
    "append-outer": "Adds an item outside the input and after input content.",
    "item": "Define a custom selection appearance.",
    "prepend-item": "Adds an item before menu content.",
    "append-item": "Adds an item after menu content.",
    "no-data": "Replaces the default no data.",
    "no-result": "Replaces the default no result."
  }
}
